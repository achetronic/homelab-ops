---
version: "3"

vars:
  HELMFILE_VERSION: "0.169.1"

tasks:

  install-cli:
    internal: true
    desc: Install Helmfile (task helmfile:install-cli)
    cmds:
      - wget -O /tmp/helmfile.tar.gz https://github.com/helmfile/helmfile/releases/download/v{{ .HELMFILE_VERSION }}/helmfile_{{ .HELMFILE_VERSION }}_linux_amd64.tar.gz
      - tar -xvf /tmp/helmfile.tar.gz -C /tmp
      - sudo mv /tmp/helmfile /usr/local/bin/helmfile
      - sudo chmod +x /usr/local/bin/helmfile
    status:
      - |
        if [[ "$(helmfile --version | grep 'helmfile version' | cut -d' ' -f3)" = "{{ .HELMFILE_VERSION }}" ]]; then exit 0; else exit 1; fi

  ######################################
  ## APPLY COMMANDS
  ######################################
  apply-all: &applyAllSpec
    internal: false
    silent: true
    desc: Perform an apply of all the releases (task helmfile:apply-all CLUSTER_NAME=cluster-01)
    dir: kubernetes/helmfile
    requires:
      vars: [ CLUSTER_NAME ]
    interactive: true
    prompt: Following action is interactive and will ask you before performing actions. Continue?
    cmds:
      - cmd: kubectl config use-context {{ .CLUSTER_NAME }}
      - cmd: |
          helmfile -f $(echo "{{ .CLUSTER_NAME }}" | cut -d@ -f2).yaml apply --include-transitive-needs --interactive {{ .EXTRA_ARGS }}

  apply-one: &applyOneSpec
    internal: false
    silent: true
    desc: Perform an apply of selected release (task helmfile:apply-one CLUSTER_NAME=cluster-01 RELEASE_NAME=ingress-nginx)
    interactive: true
    dir: kubernetes/helmfile
    requires:
      vars: [ CLUSTER_NAME, RELEASE_NAME ]
    prompt: Following action is interactive and will ask you before performing actions. Continue?
    cmds:
      - cmd: kubectl config use-context {{ .CLUSTER_NAME }}
      - cmd: helmfile -f $(echo "{{ .CLUSTER_NAME }}" | cut -d@ -f2).yaml apply --selector name={{ .RELEASE_NAME }} --include-transitive-needs --interactive {{ .EXTRA_ARGS }}

  ######################################
  ## SYNC COMMANDS
  ######################################
  sync-all:
    <<: *applyAllSpec
    desc: Perform an sync of all the releases (task helmfile:sync-all CLUSTER_NAME=cluster-01)
    cmds:
      - cmd: kubectl config use-context {{ .CLUSTER_NAME }}
      - cmd: helmfile -f $(echo "{{ .CLUSTER_NAME }}" | cut -d@ -f2).yaml sync --include-transitive-needs --interactive {{ .EXTRA_ARGS }}

  sync-one:
    <<: *applyOneSpec
    desc: Perform an sync of selected release (task helmfile:sync-one CLUSTER_NAME=cluster-01 RELEASE_NAME=ingress-nginx)
    cmds:
      - cmd: kubectl config use-context {{ .CLUSTER_NAME }}
      - cmd: helmfile -f $(echo "{{ .CLUSTER_NAME }}" | cut -d@ -f2).yaml sync --selector name={{ .RELEASE_NAME }} --include-transitive-needs --interactive {{ .EXTRA_ARGS }}
