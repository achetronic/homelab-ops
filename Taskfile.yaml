---
version: "3"

vars:
  PROJECT_DIR:
    sh: "git rev-parse --show-toplevel"

  #
  TERRAFORM_DIR: "{{.PROJECT_DIR}}/infrastructure/terraform"
  KUBERNETES_DIR: "{{.PROJECT_DIR}}/kubernetes"

  #
  TEMPORARY_DIR: "{{.PROJECT_DIR}}/temp"

env:
  KUBECONFIG:
    sh: find ~/.kube/clusters -type f | sed ':a;N;s/\n/:/;ba'

includes:
  gitlab: .taskfiles/gitlab.yaml
  terraform: .taskfiles/terraform.yaml
  terragrunt: .taskfiles/terragrunt.yaml
  kubernetes: .taskfiles/kubernetes.yaml
  helm: .taskfiles/helm.yaml
  helmfile: .taskfiles/helmfile.yaml

tasks:

  #######################################################################################
  # Global tasks:
  # Globally accessed tasks
  #######################################################################################

  default:
    silent: true
    cmds:
      - task -l

  install-dependencies:
    desc: Initialize workstation dependencies
    internal: true
    cmds:
      - task: gitlab:install-cli
      - task: terraform:install-cli
      - task: terragrunt:install-cli
      - task: kubernetes:install-cli
      - task: helm:install-cli
      - task: helmfile:install-cli

  global:init:
    desc: Initialize needed stuff to work with this repository
    cmds:
      - task: install-dependencies

  global:cleanup:
    desc: Clean autogenerated stuff
    prompt: This will remove autogenerated files (this includes locally stored tokens)... Do you want to continue?
    cmds:
      - cmd: rm -rf {{.TEMPORARY_DIR}}

  #######################################################################################
  # Glue tasks:
  # These are globally accessed tasks, but usually composed by child ones
  #######################################################################################

  glue:inject-external-secrets-token:
    desc: >-
      Inject a secret into Kubernetes, with a token for External Secrets to read variables from Gitlab
      (task glue:inject-external-secrets-token CLUSTER_NAME=cluster-01)
    summary: |
      Inject a secret into Kubernetes, with a token for External Secrets to read variables from Gitlab

      It will delete existing secret before creating the new one.
      Please make sure you don't need the old one before starting.
    prompt: This will remove the previous existing secret if found... Do you want to continue?
    requires:
      vars: [ CLUSTER_NAME ]
    vars:
      KUBERNETES_ES_SECRET_NAME: &secretName "gitlab-secret"
      KUBERNETES_ES_SECRET_NAMESPACE: &secretNamespace "external-secrets"
    cmds:
      - task: gitlab:revoke-token
        vars: { TOKEN_NAME: "{{ .CLUSTER_NAME }}" }
      - task: gitlab:generate-token
        vars: { TOKEN_NAME: "{{ .CLUSTER_NAME }}" }

      - cmd: kubectl config use-context {{ .CLUSTER_NAME }}
      - cmd: kubectl delete secret {{ .KUBERNETES_ES_SECRET_NAME }} --namespace {{ .KUBERNETES_ES_SECRET_NAMESPACE }}
        ignore_error: true
      - task: kubernetes:create-generic-secret
        vars:
          # Exchange variables (needed here as Task cannot parse them on a more global scope)
          GITLAB_ACCESS_TOKEN:
            sh: cat {{ .GITLAB_ACCESS_TOKENS_TEMPORARY_DIR }}/{{ .CLUSTER_NAME }}.json | jq '.token'

          # Actual task variables
          NAME: *secretName
          NAMESPACE: *secretNamespace
          CONTENT: |
            token=GITLAB_ACCESS_TOKEN
